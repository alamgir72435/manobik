{"version":3,"sources":["Components/pages/LoggedIn/ListOfRequests.js"],"names":["ListOfRequests","props","fetchRequests","a","axios","response","data","useQuery","refetchAllOnWindowFocus","status","refetch","deleteRequest","id","window","confirm","delete","res","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","size","thickness","speed","color","secondaryColor","length","style","marginLeft","goBack","history","marginTop","map","request"],"mappings":"kOAgFeA,UAtEQ,SAACC,GACpB,IAAMC,EAAa,uCAAG,4BAAAC,EAAA,sEACKC,IAAM,2BADX,cACZC,EADY,yBAIXA,EAASC,KAAKA,MAJH,2CAAH,qDADW,EAOAC,YAAS,KAAML,EAAe,CACxDM,yBAAyB,IADxBC,EAPyB,EAOzBA,OAAQH,EAPiB,EAOjBA,KAAMI,EAPW,EAOXA,QAGbC,EAAa,uCAAG,WAAOC,GAAP,mBAAAT,EAAA,mEAEHU,OAAOC,QAAQ,+CAFZ,gCAIQV,IAAMW,OAAN,2BAAiCH,IAJzC,cAIJI,EAJI,gBAKJN,IALI,OAMVO,IAAMC,QAAQF,EAAIV,KAAKA,KAAM,CACzBa,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAbJ,yDAkBdT,IAAMU,MAAN,sCAAY,KAAKtB,gBAAjB,iBAAY,EAAeC,YAA3B,aAAY,EAAqBqB,MAAO,CACpCR,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAzBA,0DAAH,sDA6BnB,MAAe,YAAXjB,EAEI,cAAC,IAAD,UACI,cAAC,IAAD,CAAiBmB,KAAM,IAAKC,UAAW,IAAKC,MAAO,IAAKC,MAAM,2BAC7CC,eAAe,0BAIvB,KAAb,OAAJ1B,QAAI,IAAJA,OAAA,EAAAA,EAAM2B,QAEF,oBAAIC,MAAO,CAACC,WAAW,IAAvB,8CAMA,gCACI,cAAC,IAAD,CAAYC,OAAQnC,EAAMoC,QAAQD,SAClC,cAAC,IAAD,0BACA,qBAAKF,MAAO,CAACI,UAAW,QAAxB,SACKhC,EAAKiC,KAAI,SAAAC,GAAO,OACT,cAAC,IAAD,CAAWA,QAASA,EAAS7B,cAAeA","file":"static/js/16.f828e1e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport DonorCard from \"../../DonorCard\";\r\nimport axios from \"axios\";\r\nimport {useQuery} from \"react-query\";\r\nimport {CentralizeDiv} from \"../../_shared/CentralizeDiv\";\r\nimport {SpinnerInfinity} from \"spinners-react\";\r\nimport {toast} from \"react-toastify\";\r\nimport PageHeader from \"../../_shared/PageHeader\";\r\nimport BackButton from \"../../_shared/BackButton\";\r\n\r\nconst ListOfRequests = (props) => {\r\n    const fetchRequests = async () => {\r\n        const response = await axios(\r\n            `/api/auth/getMyRequests`\r\n        );\r\n        return response.data.data;\r\n    }\r\n    let {status, data, refetch} = useQuery(\"id\", fetchRequests, {\r\n        refetchAllOnWindowFocus: false\r\n    });\r\n    const deleteRequest = async (id) => {\r\n        try {\r\n            const ok = window.confirm(\"Do you want to delete the request you made?\")\r\n            if (ok) {\r\n                const res = await axios.delete(`/api/help/delete/${id}`);\r\n                await refetch();\r\n                toast.success(res.data.data, {\r\n                    position: \"top-center\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n\r\n        } catch (err) {\r\n            toast.error(err?.response?.data?.error, {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    }\r\n    if (status === 'loading') {\r\n        return (\r\n            <CentralizeDiv>\r\n                <SpinnerInfinity size={150} thickness={100} speed={300} color=\"rgba(252, 34, 49, 0.979)\"\r\n                                 secondaryColor=\"rgba(0, 0, 0, 0.44)\"/>\r\n            </CentralizeDiv>\r\n        )\r\n    }\r\n    if (data?.length === 0) {\r\n        return (\r\n            <h2 style={{marginLeft:30}}>You don't have any requests yet!</h2>\r\n        )\r\n    }\r\n    else{\r\n\r\n        return (\r\n            <div>\r\n                <BackButton goBack={props.history.goBack}/>\r\n                <PageHeader>My Requests</PageHeader>\r\n                <div style={{marginTop: \"20px\"}}>\r\n                    {data.map(request => (\r\n                            <DonorCard request={request} deleteRequest={deleteRequest}/>\r\n                        )\r\n                    )}\r\n                </div>\r\n    \r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ListOfRequests;"],"sourceRoot":""}